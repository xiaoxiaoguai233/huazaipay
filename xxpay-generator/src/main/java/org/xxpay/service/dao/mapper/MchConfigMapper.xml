<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.xxpay.service.dao.mapper.MchConfigMapper" >
  <resultMap id="BaseResultMap" type="org.xxpay.core.entity.MchConfig" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="MchId" property="mchId" jdbcType="BIGINT" />
    <result column="configType" property="configType" jdbcType="TINYINT" />
    <result column="configName" property="configName" jdbcType="VARCHAR" />
    <result column="configValue" property="configValue" jdbcType="VARCHAR" />
    <result column="configDescribe" property="configDescribe" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, MchId, configType, configName, configValue, configDescribe, createTime, updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.xxpay.core.entity.MchConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_mch_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_mch_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_mch_config
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.xxpay.core.entity.MchConfigExample" >
    delete from t_mch_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.xxpay.core.entity.MchConfig" >
    insert into t_mch_config (id, MchId, configType, 
      configName, configValue, configDescribe, 
      createTime, updateTime)
    values (#{id,jdbcType=BIGINT}, #{mchId,jdbcType=BIGINT}, #{configType,jdbcType=TINYINT}, 
      #{configName,jdbcType=VARCHAR}, #{configValue,jdbcType=VARCHAR}, #{configDescribe,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.xxpay.core.entity.MchConfig" >
    insert into t_mch_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mchId != null" >
        MchId,
      </if>
      <if test="configType != null" >
        configType,
      </if>
      <if test="configName != null" >
        configName,
      </if>
      <if test="configValue != null" >
        configValue,
      </if>
      <if test="configDescribe != null" >
        configDescribe,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="mchId != null" >
        #{mchId,jdbcType=BIGINT},
      </if>
      <if test="configType != null" >
        #{configType,jdbcType=TINYINT},
      </if>
      <if test="configName != null" >
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null" >
        #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="configDescribe != null" >
        #{configDescribe,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.xxpay.core.entity.MchConfigExample" resultType="java.lang.Integer" >
    select count(*) from t_mch_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_mch_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.mchId != null" >
        MchId = #{record.mchId,jdbcType=BIGINT},
      </if>
      <if test="record.configType != null" >
        configType = #{record.configType,jdbcType=TINYINT},
      </if>
      <if test="record.configName != null" >
        configName = #{record.configName,jdbcType=VARCHAR},
      </if>
      <if test="record.configValue != null" >
        configValue = #{record.configValue,jdbcType=VARCHAR},
      </if>
      <if test="record.configDescribe != null" >
        configDescribe = #{record.configDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_mch_config
    set id = #{record.id,jdbcType=BIGINT},
      MchId = #{record.mchId,jdbcType=BIGINT},
      configType = #{record.configType,jdbcType=TINYINT},
      configName = #{record.configName,jdbcType=VARCHAR},
      configValue = #{record.configValue,jdbcType=VARCHAR},
      configDescribe = #{record.configDescribe,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.xxpay.core.entity.MchConfig" >
    update t_mch_config
    <set >
      <if test="mchId != null" >
        MchId = #{mchId,jdbcType=BIGINT},
      </if>
      <if test="configType != null" >
        configType = #{configType,jdbcType=TINYINT},
      </if>
      <if test="configName != null" >
        configName = #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null" >
        configValue = #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="configDescribe != null" >
        configDescribe = #{configDescribe,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xxpay.core.entity.MchConfig" >
    update t_mch_config
    set MchId = #{mchId,jdbcType=BIGINT},
      configType = #{configType,jdbcType=TINYINT},
      configName = #{configName,jdbcType=VARCHAR},
      configValue = #{configValue,jdbcType=VARCHAR},
      configDescribe = #{configDescribe,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>